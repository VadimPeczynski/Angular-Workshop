1. Formularz

<div class="card">
  <div class="card-header">
    {{ pageTitle }}
  </div>

  <div class="card-body container">
    <form>
      <div class="form-group">
        <label for="name">Nazwa</label>
        <input type="text" class="form-control" id="name" />
      </div>
      <div class="form-group">
        <label for="team">Team</label>
        <input type="text" class="form-control" id="team" />
      </div>
      <div class="form-group">
        <label for="secretIdentity">Tożsamość</label>
        <input type="text" class="form-control" id="secretIdentity" />
      </div>
      <div class="form-group">
        <label for="salary">Wynagrodzenie</label>
        <input type="number" class="form-control" id="salary" />
      </div>
      <div class="form-group">
        <label for="salary">Siła</label>
        <input type="number" class="form-control" id="salary" />
      </div>
      <div class="form-group">
        <label for="description">Opis</label>
        <textarea class="form-control" id="description" rows="3"></textarea>
      </div>
      <div class="form-group form-check">
        <input type="checkbox" class="form-check-input" id="active" />
        <label class="form-check-label" for="active">Aktywny</label>
      </div>
      <div class="form-group form-check">
        <input
          type="checkbox"
          class="form-check-input"
          id="active"
        />
        <label class="form-check-label" for="active">Aktywny</label>
      </div>
      <button type="submit" class="btn btn-primary mr-2">Dodaj</button>
      <button type="button" class="btn btn-secondary">Anuluj</button>
    </form>
  </div>
</div>

2. NgModel

<div class="card">
  <div class="card-header">
    {{ pageTitle }}
  </div>
  <div class="card-body container">
    <form #form="ngForm">
      <div class="form-group">
        <label for="name">Nazwa</label>
        <input
          type="text"
          class="form-control"
          id="name"
          name="name"
          placeholder="Nazwa bohatera"
          ngModel
        />
      </div>
      <div class="form-group">
        <label for="team">Team</label>
        <select class="form-control" id="team" name="team" ngModel>
          <option value="" selected disabled hidden>Wybierz</option>
          <option *ngFor="let team of teams">{{ team }}</option>
        </select>
      </div>
      <div class="form-group">
        <label for="secretIdentity"
          >Tożsamość
          <span
            class="fas fa-info-circle ml-2"
            (click)="onIconClick()"
            [ngStyle]="{ color: isPasswordVisible ? 'red' : 'green' }"
          ></span>
        </label>
        <input
          [type]="inputType"
          class="form-control"
          id="secretIdentity"
          name="secretIdentity"
          ngModel
        />
      </div>
      <div class="form-group">
        <label for="salary">Wynagrodzenie</label>
        <input
          type="number"
          class="form-control"
          id="salary"
          name="salary"
          ngModel
        />
      </div>
      <div class="form-group">
        <label for="salary">Siła</label>
        <input
          type="number"
          class="form-control"
          id="strength"
          name="strength"
          ngModel
        />
      </div>
      <div class="form-group">
        <label for="description">Opis</label>
        <textarea
          class="form-control"
          id="description"
          rows="3"
          name="description"
          ngModel
        ></textarea>
      </div>
      <div class="form-group form-check">
        <input
          type="checkbox"
          class="form-check-input"
          id="active"
          name="active"
          ngModel
        />
        <label class="form-check-label" for="active">Aktywny</label>
      </div>
      <button type="submit" class="btn btn-primary mr-2">Dodaj</button>
      <button type="button" class="btn btn-secondary">Anuluj</button>
    </form>
  </div>
  {{ form.value | json }}
</div>

3. Nowy bohater

hero: Hero = {
    name: null,
    team: null,
    secretIdentity: null,
    salary: 0,
    strength: 0,
    description: '',
    active: false,
    logoUrl: '',
  } as Hero;

4. Testowanie parametrów

#propertyTest="ngModel"

<h5>dirty: {{ propertyTest.dirty }}</h5>
      <h5>pristine: {{ propertyTest.pristine }}</h5>
      <h5>touched: {{ propertyTest.touched }}</h5>
      <h5>untouched: {{ propertyTest.untouched }}</h5>
      <h5>valid: {{ propertyTest.valid }}</h5>
      <h5>invalid: {{ propertyTest.invalid }}</h5>

5. Walidacja

<div
          class="alert alert-danger"
          [hidden]="nameField.valid || nameField.untouched"
        >
          Wprowadź imię
        </div>

6. Tworzenie/Aktualizowanie

createHero(hero: Hero) {
    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });
    const newHero = { ...hero, id: null };
    return this.http
      .post<Hero>(this.heroesUrl, newHero, { headers })
      .pipe(tap((data) => console.log('createHero: ' + JSON.stringify(data))));
  }

  updateHero(hero: Hero) {
    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });
    const url = `${this.heroesUrl}/${hero.id}`;
    return this.http
      .put<Hero>(url, hero, { headers })
      .pipe(
        tap(() => console.log('updateHero: ' + hero.id)),
        map(() => hero)
      );
  }